fun seive(flags: [bool], n: int) -> [int] {
    let primes = make([int])
    let i = 2
    while i < n {
        if flags[i] {
            append(primes, i)
            let j = i * i
            while j < n {
                flags[j] = false
                j = j + i
            }
        }
        i = i + 1
    }
    return primes
}

fun main() {
    let n = 500000
    let flags = make([bool], n)
    flags[0] = false
    flags[1] = false
    for i in 2..n {
        flags[i] = true
    }
    let primes = seive(flags, n)
    print(primes)
}
