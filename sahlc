#!/usr/bin/bash

print_usage() {
    printf "Usage: "
    printf "  %s [options] <file.sahl>\n" "$0"
    printf "  %s [options] <file.c> <file.sahl> ...\n" "$0"
    printf "  %s [options] <file.o> <file.sahl> ...\n" "$0"
    printf "Options:\n"
    printf "  -o <file>  Output file name\n"
    printf "  -h         Print this help message\n"
}

check() {
    if [ $? -ne 0 ]; then
        echo "error: failed to compile $file"
        exit 1
    fi
}

if [ $# -eq 0 ]; then
    print_usage
    exit 1
fi

files=()
while [ $# -gt 0 ]; do
    case "$1" in
        -o)
            shift
            o=$1
            ;;
        -h)
            print_usage
            exit 0
            ;;
        *)
            files+=("$1")
            ;;
    esac
    shift
done

files_str=$(printf " %s" "${files[@]}")

echo "compiling $file_str to $o"

# $rt=./runtime/target/release/libruntime.so
base_dir=$(dirname "$0")
rt=$base_dir/rt.c
sahl_compiler=$base_dir/frontend/target/release/sahl

cmds=()
compiled_files=()

for f in "${files[@]}"; do
    # if sahl file
    if [[ $f == *.sahl ]]; then
        f_o=${f%.*}.o
        f_ll=${f%.*}.ll
        cmds+=("$sahl_compiler $f -n 2>$f_ll")
        cmds+=("clang -O3 -c -o ./$f_o $f_ll")
        compiled_files+=("./$f_o")
    elif [[ $f == *.c ]]; then
        f_o=${f%.*}.o
        cmds+=("clang -O3 -c $f -o $f_o")
        compiled_files+=("./$f_o")
    elif [[ $f == *.o ]]; then
        # do nothing
        object=1
    else
        echo "error: invalid file type $f"
        exit 1
    fi
done

for cmd in "${cmds[@]}"; do
    echo $cmd
    eval "$cmd; check $1"
done

compiled=$(printf " %s" "${compiled_files[@]}")

rt_compile="clang -O3 -c $rt -o rt.o"
if [ ! -f rt.o ];
then
    echo $rt_compile
    eval "$rt_compile; check $1"
fi

linker="clang -lm -O3 $base_dir/rt.o $compiled $base_dir/libs/libgc.a -o ./$o"
echo $linker
eval "$linker; check $1"
